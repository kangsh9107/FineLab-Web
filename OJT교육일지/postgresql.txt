-- 문제1 : 목표 달성 여부에 따라 해당 날짜 사이에 골드하트 받은 회원의 포인트 합산
-- (해당 날짜 사이에 골드하트를 받은 회원들의 포인트 총합을 한번에 출력)
-- (일일걷기 완료 : 하트1개 + 100포인트 지급)
-- (하트 30개 수집 : 골드하트1개 + 300포인트 지급)
-- (포인트는 자동지급으로 생각)
select sum(T2.mb_pnt) as sum
from t_st_heart  T1
         left join t_mb_mbr T2 on T1.mb_seq = T2.mb_seq
where T1.sh_pay_ymd >= '20230401' and T1.sh_pay_ymd <= '20230414'
  and T1.sh_stp_ht_tp = '2'; -- 1:하트, 2:골드하트, 3:다이아하트

-- (해당 날짜 사이에 골드하트를 받은 회원들의 골드하트로 얻은 포인트 총합을 각각 출력)
-- select T1.mb_seq, count(T2.sh_stp_ht_tp) * 300 as sum
-- from t_mb_mbr T1
--          join t_st_heart T2 on T1.mb_seq = T2.mb_seq
-- where to_date(sh_pay_ymd, 'YYYYMMDD') between to_date('2023-04-01', 'YYYY-MM-DD') and to_date('2023-04-14', 'YYYY-MM-DD')
--   and T2.sh_stp_ht_tp = '2' -- 1:하트, 2:골드하트, 3:다이아하트
-- group by T1.mb_seq;





-- 문제2 : 전체 회원 중 앱 알림을 설정한 회원 인원수
-- (알림 유형별로)
select coalesce(count(T1.mb_seq), 0) as count
from t_mb_mbr T1
         join t_mb_notf T2 on T1.mb_seq = T2.mb_seq
where T2.mn_notf_yn = 'Y'
  and T2.mn_notf_tp = '01'; -- 01:앱 알림, 02:복약 알림, 03:마케팅 수신 동의





-- 문제3 : 종료된 단체배틀방 별 회원 인원 수
-- (배틀방 유형별로)
select T1.btl_rm_seq, count(T2.btl_rm_mbr_seq)
from t_bt_btl_rm T1
         join t_bt_btl_rm_mbr T2 on T1.btl_rm_seq = T2.btl_rm_seq
where to_date(T1.br_end_ymd, 'YYYYMMDD') <= to_date(to_char(now(), 'YYYYMMDD'), 'YYYYMMDD')
  and br_btl_rm_tp = '02' -- 01:개인, 02:단체, 03:그룹, 04:그룹내 배틀방
group by T1.btl_rm_seq;





-- 문제4 : 4월 1~14일동안 스텝 합산이 10만 이상인 고객별 스텝으로 지급받은 포인트 합산
-- (해당 날짜 사이에 스텝 총합이 10만 이상인 고객들의 포인트 총합을 한번에 출력)
select T1.mb_seq, sum(T1.mb_pnt)
from t_mb_mbr T1
         join t_st_heart T2 on T1.mb_seq = T2.mb_seq
where T1.mb_seq in (select T1.mb_seq
                    from t_mb_mbr T1
                             join t_st_day T2 on T1.mb_seq = T2.mb_seq
                    where to_date(T2.dy_ymd, 'YYYYMMDD') between to_date('2023-04-01', 'YYYY-MM-DD') and to_date('2023-04-14', 'YYYY-MM-DD')
                    group by T1.mb_seq, T1.mb_pnt
                    having sum(T2.dy_stp_cnt) >= 100000)
group by T1.mb_seq;

-- (해당 날짜 사이에 스텝 총합이 10만 이상인 고객들이 하트로 얻은 포인트 총합을 각각 출력)
select T1.mb_seq, sum(case when T2.sh_stp_ht_tp = '3' then cast(T2.sh_stp_ht_tp as int) * 9999999
                           when T2.sh_stp_ht_tp = '2' then cast(T2.sh_stp_ht_tp as int) * 300
                           else cast(T2.sh_stp_ht_tp as int) * 100
                      end)
from t_mb_mbr T1
         join t_st_heart T2 on T1.mb_seq = T2.mb_seq
where to_date(sh_pay_ymd, 'YYYYMMDD') between to_date('2023-04-01', 'YYYY-MM-DD') and to_date('2023-04-14', 'YYYY-MM-DD')
  and T1.mb_seq in (select T1.mb_seq
                    from t_mb_mbr T1
                             join t_st_day T2 on T1.mb_seq = T2.mb_seq
                    where to_date(T2.dy_ymd, 'YYYYMMDD') between to_date('2023-04-01', 'YYYY-MM-DD') and to_date('2023-04-14', 'YYYY-MM-DD')
                    group by T1.mb_seq, T1.mb_pnt
                    having sum(T2.dy_stp_cnt) >= 100000)
group by T1.mb_seq;





-- 문제5 : 4월동안 주량을 10번 넘기고 상담동의한 회원들의 시퀀스와 이름, 전체 음주량
select T1.mb_seq, T1.mb_nm, sum(T2.totl_drunk)
from t_mb_mbr T1
         join t_alc_mgt T2 on T1.mb_seq = T2.mb_seq
         join t_alc_limit T3 on T1.mb_seq = T3.mb_seq
where to_date(T2.drunk_ymd, 'YYYYMMDD') between to_date('2022-09-01', 'YYYY-MM-DD') and to_date('2022-09-30', 'YYYY-MM-DD')
  and T3.agree_yn = 'Y'
group by T1.mb_seq, T1.mb_nm
having count(T2.my_alc_limit_yn = 'Y') > 10;





1. join의 경우 null값이 엮일 수 있으니 left나 right로 확실하게 지정하기
2. like, between, in은 성능이 안좋으니 되도록 피하기
3. join 최소화 하기
4. 월별 통계 뽑을때 YYYYMMDD 데이터를 left로 왼쪽부터 6개 잘라서 사용하는 방법도 있다





-- CRM 위플지류합 통계
select C.본부, C.사업단, C.이름, C.성별, C.생년월일, C.등급, C.위플등록일, (case C.cu_acnt
                                                                        when '지류고객' then D.reg_dt
                                                                        else null
                                                                    end) as 신청서등록일, C.TFA이름, C.TFA코드
from (
      select cu_acnt, cu_seq, B.bonbu_nm as 본부, B.bran_nm as 사업단, A.cu_nm as 이름, A.cu_sex as 성별, A.cu_brtdy as 생년월일,
             (case gd_cd
                  when 4379 then '하이브리드'
                  when 4317 then '일반'
                  when 4266 then '일반'
                  when 4286 then '일반'
                  when 4267 then 'VIP'
                  when 4268 then 'VVIP'
             end) as 등급, left(A.cu_agree_ymdt1, 8) as 위플등록일, A.cu_rgst_ymd as 신청서등록일, B.tfa_name as TFA이름, B.tfa_code as TFA코드
      from (
            select *
            from t_cu_cust where cu_agree_yn1 = 'Y'
                             and left(cu_agree_ymdt1, 8) < convert(varchar(80), getdate(), 112)
                             and (left(cu_agree_ymdt1, 6) = left(convert(varchar(80), getdate(), 112), 6) and (co_cd = 'X28' or co_cd = 'A00'))
                              or (cu_acnt = '지류고객' and left(cu_rgst_ymd, 8) < convert(varchar(80), getdate(), 112) and left(cu_rgst_ymd, 6) = left(convert(varchar(80), getdate(), 112), 6))
                             and (co_cd = 'X28' or co_cd = 'A00')
           ) as A
      left join (
                 select *
                 from crm_aplus_staff
                ) as B on A.cu_extnl_certi_cd = B.tfa_code
     ) as C
left join (
           select *
           from aplus_customer_paper where left(reg_dt, 6) = left(convert(varchar(80), getdate(), 112), 6)
                                       and (cpcode = 'X28' or cpcode = 'A00')
          ) as D on C.cu_seq = D.cu_seq
order by 본부, 사업단, 위플등록일, 신청서등록일;